{
  "nodes": [
    {
      "pos": [
        2,
        34
      ],
      "content": "DSC for Linux nxService Resource"
    },
    {
      "pos": [
        36,
        167
      ],
      "content": "The <bpt id=\"p1\">**</bpt>nxService<ept id=\"p1\">**</ept> resource in PowerShell Desired State Configuration (DSC) provides a mechanism to manage services on a Linux node."
    },
    {
      "pos": [
        172,
        178
      ],
      "content": "Syntax"
    },
    {
      "pos": [
        413,
        423
      ],
      "content": "Properties"
    },
    {
      "pos": [
        427,
        435
      ],
      "content": "Property"
    },
    {
      "pos": [
        439,
        450
      ],
      "content": "Description"
    },
    {
      "pos": [
        466,
        470
      ],
      "content": "Name"
    },
    {
      "pos": [
        472,
        516
      ],
      "content": "The name of the service/daemon to configure."
    },
    {
      "pos": [
        521,
        531
      ],
      "content": "Controller"
    },
    {
      "pos": [
        533,
        600
      ],
      "content": "The type of service controller to use when configuring the service."
    },
    {
      "pos": [
        605,
        612
      ],
      "content": "Enabled"
    },
    {
      "pos": [
        614,
        659
      ],
      "content": "Indicates whether the service starts on boot."
    },
    {
      "pos": [
        664,
        669
      ],
      "content": "State"
    },
    {
      "content": "Indicates whether the service is running.",
      "pos": [
        671,
        712
      ]
    },
    {
      "content": "Set this property to \"Stopped\" to ensure that the service is not running.",
      "pos": [
        713,
        786
      ]
    },
    {
      "content": "Set it to \"Running\" to ensure that the service is not running.",
      "pos": [
        787,
        849
      ]
    },
    {
      "pos": [
        854,
        863
      ],
      "content": "DependsOn"
    },
    {
      "content": "Indicates that the configuration of another resource must run before this resource is configured.",
      "pos": [
        866,
        963
      ]
    },
    {
      "content": "For example, if the <bpt id=\"p2\">**</bpt>ID<ept id=\"p2\">**</ept> of the resource configuration script block that you want to run first is <bpt id=\"p3\">**</bpt>ResourceName<ept id=\"p3\">**</ept> and its type is <bpt id=\"p4\">**</bpt>ResourceType<ept id=\"p4\">**</ept>, the syntax for using this property is <ph id=\"ph1\">`DependsOn = \"[ResourceType]ResourceName\"`</ph>.",
      "pos": [
        964,
        1196
      ]
    },
    {
      "pos": [
        1204,
        1226
      ],
      "content": "Additional Information"
    },
    {
      "content": "The <bpt id=\"p5\">**</bpt>nxService<ept id=\"p5\">**</ept> resource will not create a service definition or script for the service if it does not exist.",
      "pos": [
        1228,
        1339
      ]
    },
    {
      "content": "You can use the PowerShell Desired State Configuration <bpt id=\"p6\">**</bpt>nxFile<ept id=\"p6\">**</ept> Resource resource to manage the existence or contents of the service definition file or script.",
      "pos": [
        1340,
        1501
      ]
    },
    {
      "pos": [
        1506,
        1513
      ],
      "content": "Example"
    },
    {
      "pos": [
        1515,
        1657
      ],
      "content": "The following example shows configuration of the “httpd” service (for Apache HTTP Server), registered with the <bpt id=\"p7\">**</bpt>SystemD<ept id=\"p7\">**</ept> service controller."
    }
  ],
  "content": "# DSC for Linux nxService Resource\n\nThe **nxService** resource in PowerShell Desired State Configuration (DSC) provides a mechanism to manage services on a Linux node.\n\n## Syntax\n\n```\nnxService <string> #ResourceName\n{\n    Name = <string>\n    [ Controller = <string> { init | upstart | system }  ]\n    [ Enambled = <bool> ]\n    [ State = <string> { Running | Stopped } ]\n    [ DependsOn = <string[]> ]\n\n}\n```\n\n## Properties\n|  Property |  Description | \n|---|---|\n| Name| The name of the service/daemon to configure.| \n| Controller| The type of service controller to use when configuring the service.| \n| Enabled| Indicates whether the service starts on boot.| \n| State| Indicates whether the service is running. Set this property to \"Stopped\" to ensure that the service is not running. Set it to \"Running\" to ensure that the service is not running.| \n| DependsOn | Indicates that the configuration of another resource must run before this resource is configured. For example, if the **ID** of the resource configuration script block that you want to run first is **ResourceName** and its type is **ResourceType**, the syntax for using this property is `DependsOn = \"[ResourceType]ResourceName\"`.| \n\n\n## Additional Information\n\nThe **nxService** resource will not create a service definition or script for the service if it does not exist. You can use the PowerShell Desired State Configuration **nxFile** Resource resource to manage the existence or contents of the service definition file or script.\n\n## Example\n\nThe following example shows configuration of the “httpd” service (for Apache HTTP Server), registered with the **SystemD** service controller.\n\n```\nImport-DSCResource -Module nx \n\nNode $node {\n#Apache Service\nnxService ApacheService \n{\nName = \"httpd\"\nState = \"running\"\nEnabled = $true\nController = \"systemd\"\n}\n}\n```\n"
}