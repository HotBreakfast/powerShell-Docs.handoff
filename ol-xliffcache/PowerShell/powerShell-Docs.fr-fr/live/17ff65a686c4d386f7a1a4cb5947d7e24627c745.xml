{"nodes":[{"content":"Windows PowerShell Glossary","pos":[11,38]},{"content":"Windows PowerShell Glossary","pos":[173,200]},{"content":"Term","pos":[204,208]},{"content":"Definition","pos":[209,219]},{"content":"binary module","pos":[248,261]},{"content":"A Windows PowerShell module whose root module is a binary module file (.dll).","pos":[262,339]},{"content":"A binary module may or may not include a module manifest.","pos":[340,397]},{"content":"common parameter","pos":[400,416]},{"content":"A parameter that is added to all cmdlets and advanced functions by the Windows PowerShell engine.","pos":[417,514]},{"content":"dot source","pos":[517,527]},{"content":"In Windows PowerShell, to start a command by typing a dot and a space before the command.","pos":[528,617]},{"content":"Commands that are dot sourced run in the current scope instead of in a new scope.","pos":[618,699]},{"content":"Any variables, aliases, functions, or drives that command creates are created in the current scope and are available to users when the command is completed.","pos":[700,856]},{"content":"dynamic module","pos":[859,873]},{"content":"A module that exists only in memory.","pos":[874,910]},{"content":"The Import\\-PSSession cmdlet creates dynamic modules.","pos":[911,964]},{"content":"dynamic parameter","pos":[967,984]},{"content":"A parameter that is added to a Windows PowerShell cmdlet, function, or script under certain conditions.","pos":[985,1088]},{"content":"Cmdlets, functions, providers, and scripts can add dynamic parameters.","pos":[1089,1159]},{"content":"formatting file","pos":[1162,1177]},{"content":"A Windows PowerShell XML file that has the .format.ps1xml extension and that defines how Windows PowerShell displays an object based on its .NET Framework type.","pos":[1178,1338]},{"content":"global session state","pos":[1341,1361]},{"content":"The session state that contains the data that is accessible to the user of a Windows PowerShell session.","pos":[1362,1466]},{"content":"host","pos":[1469,1473]},{"content":"The interface that the Windows PowerShell engine uses to communicate with the user.","pos":[1474,1557]},{"content":"For example, the host specifies how prompts are handled between Windows PowerShell and the user.","pos":[1558,1654]},{"content":"host application","pos":[1657,1673]},{"content":"A program that loads the Windows PowerShell engine into its process and uses it to perform operations.","pos":[1674,1776]},{"content":"input processing method","pos":[1779,1802]},{"content":"A method that a cmdlet can use to process the records it receives as input.","pos":[1803,1878]},{"content":"The input processing methods include the BeginProcessing method, the ProcessRecord method, the EndProcessing method, and the StopProcessing method.","pos":[1879,2026]},{"content":"manifest module","pos":[2029,2044]},{"content":"A Windows PowerShell module that has a manifest and whose ModulesToProcess key is empty.","pos":[2045,2133]},{"content":"module manifest","pos":[2136,2151]},{"content":"A Windows PowerShell data file (.psd1) that describes the contents of a module and that controls how a module is processed.","pos":[2152,2275]},{"content":"module session state","pos":[2278,2298]},{"content":"The session state that contains the public and private data of a Windows PowerShell module.","pos":[2299,2390]},{"content":"The private data in this session state is not available to the user of a Windows PowerShell session.","pos":[2391,2491]},{"content":"non\\-terminating error","pos":[2494,2516]},{"content":"An error that does not stop Windows PowerShell from continuing to process the command.","pos":[2517,2603]},{"content":"noun","pos":[2606,2610]},{"content":"The word that follows the hyphen in a Windows PowerShell cmdlet name.","pos":[2611,2680]},{"content":"The noun describes the resources upon which the cmdlet acts.","pos":[2681,2741]},{"content":"parameter set","pos":[2744,2757]},{"content":"A group of parameters that can be used in the same command to perform a specific action.","pos":[2758,2846]},{"content":"pipe","pos":[2849,2853]},{"content":"In Windows PowerShell, to send the results of the preceding command as input to the next command in the pipeline.","pos":[2854,2967]},{"content":"pipeline","pos":[2970,2978]},{"content":"A series of commands connected by pipeline operators (&amp;#124;) (ASCII 124).","pos":[2979,3053]},{"content":"Each pipeline operator sends the results of the preceding command as input to the next command.","pos":[3054,3149]},{"content":"PSSession","pos":[3152,3161]},{"content":"A type of Windows PowerShell session that is created, managed, and closed by the user.","pos":[3162,3248]},{"content":"root module","pos":[3251,3262]},{"content":"The module specified in the ModuleToProcess key in a module manifest.","pos":[3263,3332]},{"content":"runspace","pos":[3335,3343]},{"content":"In Windows PowerShell, the operating environment in which each command in a pipeline is executed.","pos":[3344,3441]},{"content":"script block","pos":[3444,3456]},{"content":"In the Windows PowerShell programming language, a collection of statements or expressions that can be used as a single unit.","pos":[3457,3581]},{"content":"A script block can accept arguments and return values.","pos":[3582,3636]},{"content":"script module","pos":[3639,3652]},{"content":"A Windows PowerShell module whose root module is a script module file (.psm1).","pos":[3653,3731]},{"content":"A script module may or may not include a module manifest.","pos":[3732,3789]},{"content":"script module file","pos":[3792,3810]},{"content":"A file that contains a Windows PowerShell script.","pos":[3811,3860]},{"content":"The script defines the members that the script module exports.","pos":[3861,3923]},{"content":"Script module files have the .psm1 file name extension.","pos":[3924,3979]},{"content":"shell","pos":[3982,3987]},{"content":"The command interpreter that is used to pass commands to the operating system.","pos":[3988,4066]},{"content":"switch parameter","pos":[4069,4085]},{"content":"A parameter that does not take an argument.","pos":[4086,4129]},{"content":"terminating error","pos":[4132,4149]},{"content":"An error that stops Windows PowerShell from processing the command.","pos":[4150,4217]},{"content":"transaction","pos":[4220,4231]},{"content":"An atomic unit of work.","pos":[4232,4255]},{"content":"The work in a transaction must be completed as a whole; if any part of the transaction fails, the entire transaction fails.","pos":[4256,4379]},{"content":"types file","pos":[4382,4392]},{"content":"A Windows PowerShell XML file that has the .ps1xml extension and that extends the properties of Microsoft .NET Framework types in Windows PowerShell.","pos":[4393,4542]},{"content":"verb","pos":[4545,4549]},{"content":"The word that precedes the hyphen in a Windows PowerShell cmdlet  name.","pos":[4550,4621]},{"content":"The verb describes the action that the cmdlet performs.","pos":[4622,4677]},{"content":"Windows PowerShell","pos":[4680,4698]},{"content":"A command\\-line shell and task\\-based scripting technology that provides IT administrators comprehensive control and automation of system administration tasks.","pos":[4699,4858]},{"content":"Windows PowerShell command","pos":[4861,4887]},{"content":"The elements in a pipeline that cause an action to be carried out.","pos":[4888,4954]},{"content":"Windows PowerShell commands are either typed at the keyboard or invoked programmatically.","pos":[4955,5044]},{"content":"Windows PowerShell data file","pos":[5047,5075]},{"content":"A text file that has the .psd1 file name extension.","pos":[5076,5127]},{"content":"Windows PowerShell uses data files for various purposes such as storing module manifest data and storing translated strings for script internationalization.","pos":[5128,5284]},{"content":"Windows PowerShell drive","pos":[5287,5311]},{"content":"A virtual drive that provides direct access to a data store.","pos":[5312,5372]},{"content":"It can be defined by a Windows PowerShell provider or created at the command line.","pos":[5373,5455]},{"content":"Drives created at the command line are session\\-specific drives and are lost when the session is closed.","pos":[5456,5560]},{"content":"Windows PowerShell Integrated Scripting Environment (ISE)","pos":[5563,5620]},{"content":"A Windows PowerShell host application that enables you to run commands and to write, test, and debug scripts in a friendly, syntax\\-colored, Unicode\\-compliant environment.","pos":[5621,5793]},{"content":"Windows PowerShell module","pos":[5796,5821]},{"content":"A self\\-contained reusable unit that allows you to partition, organize, and abstract your Windows PowerShell  code.","pos":[5822,5937]},{"content":"A module can contain cmdlets, providers, functions, variables, and other types of resources that can be imported as a single unit.","pos":[5938,6068]},{"content":"Windows PowerShell provider","pos":[6071,6098]},{"content":"A Microsoft .NET Framework\\-based program that makes the data in a specialized data store available in Windows PowerShell so that you can view and manage it.","pos":[6099,6256]},{"content":"Windows PowerShell script","pos":[6259,6284]},{"content":"A script that is written in the Windows PowerShell language.","pos":[6285,6345]},{"content":"Windows PowerShell script file","pos":[6348,6378]},{"content":"A file that has the .ps1 extension and that contains a script that is written in the Windows PowerShell language.","pos":[6379,6492]},{"content":"Windows PowerShell snap\\-in","pos":[6495,6522]},{"content":"A resource that defines a set of cmdlets, providers, and Microsoft .NET Framework types that can be added to the Windows PowerShell environment.","pos":[6523,6667]},{"content":"Windows PowerShell Workflow","pos":[6670,6697]},{"content":"A workflow is a sequence of programmed, connected steps that perform long\\-running tasks or require the coordination of multiple steps across multiple devices or managed nodes.","pos":[6698,6874]},{"content":"Windows PowerShell Workflow lets IT pros and developers author sequences of multi\\-device management activities, or single tasks within a workflow, as workflows.","pos":[6875,7036]},{"content":"Windows PowerShell Workflow lets you adapt and run both Windows PowerShell scripts and XAML files as workflows.","pos":[7037,7148]}],"content":"---\ntitle: Windows PowerShell Glossary\nms.custom: na\nms.reviewer: na\nms.suite: na\nms.tgt_pltfrm: na\nms.topic: article\nms.assetid: b0f88cbe-cb83-4912-a301-184534cb35c7\n---\n# Windows PowerShell Glossary\n\n\n|Term|Definition|\n|--------|--------------|\n|binary module|A Windows PowerShell module whose root module is a binary module file (.dll). A binary module may or may not include a module manifest.|\n|common parameter|A parameter that is added to all cmdlets and advanced functions by the Windows PowerShell engine.|\n|dot source|In Windows PowerShell, to start a command by typing a dot and a space before the command. Commands that are dot sourced run in the current scope instead of in a new scope. Any variables, aliases, functions, or drives that command creates are created in the current scope and are available to users when the command is completed.|\n|dynamic module|A module that exists only in memory. The Import\\-PSSession cmdlet creates dynamic modules.|\n|dynamic parameter|A parameter that is added to a Windows PowerShell cmdlet, function, or script under certain conditions. Cmdlets, functions, providers, and scripts can add dynamic parameters.|\n|formatting file|A Windows PowerShell XML file that has the .format.ps1xml extension and that defines how Windows PowerShell displays an object based on its .NET Framework type.|\n|global session state|The session state that contains the data that is accessible to the user of a Windows PowerShell session.|\n|host|The interface that the Windows PowerShell engine uses to communicate with the user. For example, the host specifies how prompts are handled between Windows PowerShell and the user.|\n|host application|A program that loads the Windows PowerShell engine into its process and uses it to perform operations.|\n|input processing method|A method that a cmdlet can use to process the records it receives as input. The input processing methods include the BeginProcessing method, the ProcessRecord method, the EndProcessing method, and the StopProcessing method.|\n|manifest module|A Windows PowerShell module that has a manifest and whose ModulesToProcess key is empty.|\n|module manifest|A Windows PowerShell data file (.psd1) that describes the contents of a module and that controls how a module is processed.|\n|module session state|The session state that contains the public and private data of a Windows PowerShell module. The private data in this session state is not available to the user of a Windows PowerShell session.|\n|non\\-terminating error|An error that does not stop Windows PowerShell from continuing to process the command.|\n|noun|The word that follows the hyphen in a Windows PowerShell cmdlet name. The noun describes the resources upon which the cmdlet acts.|\n|parameter set|A group of parameters that can be used in the same command to perform a specific action.|\n|pipe|In Windows PowerShell, to send the results of the preceding command as input to the next command in the pipeline.|\n|pipeline|A series of commands connected by pipeline operators (&#124;) (ASCII 124). Each pipeline operator sends the results of the preceding command as input to the next command.|\n|PSSession|A type of Windows PowerShell session that is created, managed, and closed by the user.|\n|root module|The module specified in the ModuleToProcess key in a module manifest.|\n|runspace|In Windows PowerShell, the operating environment in which each command in a pipeline is executed.|\n|script block|In the Windows PowerShell programming language, a collection of statements or expressions that can be used as a single unit. A script block can accept arguments and return values.|\n|script module|A Windows PowerShell module whose root module is a script module file (.psm1). A script module may or may not include a module manifest.|\n|script module file|A file that contains a Windows PowerShell script. The script defines the members that the script module exports. Script module files have the .psm1 file name extension.|\n|shell|The command interpreter that is used to pass commands to the operating system.|\n|switch parameter|A parameter that does not take an argument.|\n|terminating error|An error that stops Windows PowerShell from processing the command.|\n|transaction|An atomic unit of work. The work in a transaction must be completed as a whole; if any part of the transaction fails, the entire transaction fails.|\n|types file|A Windows PowerShell XML file that has the .ps1xml extension and that extends the properties of Microsoft .NET Framework types in Windows PowerShell.|\n|verb|The word that precedes the hyphen in a Windows PowerShell cmdlet  name. The verb describes the action that the cmdlet performs.|\n|Windows PowerShell|A command\\-line shell and task\\-based scripting technology that provides IT administrators comprehensive control and automation of system administration tasks.|\n|Windows PowerShell command|The elements in a pipeline that cause an action to be carried out. Windows PowerShell commands are either typed at the keyboard or invoked programmatically.|\n|Windows PowerShell data file|A text file that has the .psd1 file name extension. Windows PowerShell uses data files for various purposes such as storing module manifest data and storing translated strings for script internationalization.|\n|Windows PowerShell drive|A virtual drive that provides direct access to a data store. It can be defined by a Windows PowerShell provider or created at the command line. Drives created at the command line are session\\-specific drives and are lost when the session is closed.|\n|Windows PowerShell Integrated Scripting Environment (ISE)|A Windows PowerShell host application that enables you to run commands and to write, test, and debug scripts in a friendly, syntax\\-colored, Unicode\\-compliant environment.|\n|Windows PowerShell module|A self\\-contained reusable unit that allows you to partition, organize, and abstract your Windows PowerShell  code. A module can contain cmdlets, providers, functions, variables, and other types of resources that can be imported as a single unit.|\n|Windows PowerShell provider|A Microsoft .NET Framework\\-based program that makes the data in a specialized data store available in Windows PowerShell so that you can view and manage it.|\n|Windows PowerShell script|A script that is written in the Windows PowerShell language.|\n|Windows PowerShell script file|A file that has the .ps1 extension and that contains a script that is written in the Windows PowerShell language.|\n|Windows PowerShell snap\\-in|A resource that defines a set of cmdlets, providers, and Microsoft .NET Framework types that can be added to the Windows PowerShell environment.|\n|Windows PowerShell Workflow|A workflow is a sequence of programmed, connected steps that perform long\\-running tasks or require the coordination of multiple steps across multiple devices or managed nodes. Windows PowerShell Workflow lets IT pros and developers author sequences of multi\\-device management activities, or single tasks within a workflow, as workflows. Windows PowerShell Workflow lets you adapt and run both Windows PowerShell scripts and XAML files as workflows.|\n\n"}