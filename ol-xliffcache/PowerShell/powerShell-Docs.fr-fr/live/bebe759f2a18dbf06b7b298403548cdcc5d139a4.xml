{
  "nodes": [
    {
      "content": "Selecting Parts of Objects (Select-Object)",
      "pos": [
        11,
        53
      ]
    },
    {
      "content": "Selecting Parts of Objects (Select-Object)",
      "pos": [
        188,
        230
      ]
    },
    {
      "content": "You can use the <bpt id=\"p1\">**</bpt>Select\\-Object<ept id=\"p1\">**</ept> cmdlet to create new, custom Windows PowerShell objects that contain properties selected from the objects you use to create them.",
      "pos": [
        231,
        395
      ]
    },
    {
      "content": "Type the following command to create a new object that includes only the Name and FreeSpace properties of the Win32\\_LogicalDisk WMI class:",
      "pos": [
        396,
        535
      ]
    },
    {
      "content": "You cannot see the type of data after issuing that command, but if you pipe the result to Get\\-Member after the Select\\-Object, you can tell that you have a new type of object, a PSCustomObject:",
      "pos": [
        783,
        977
      ]
    },
    {
      "content": "Select\\-Object has many uses.",
      "pos": [
        1510,
        1539
      ]
    },
    {
      "content": "One of them is replicating data that you can then modify.",
      "pos": [
        1540,
        1597
      ]
    },
    {
      "content": "We can now handle the problem we ran across in the previous section.",
      "pos": [
        1598,
        1666
      ]
    },
    {
      "content": "We can update the value of FreeSpace in our newly\\-created objects and the output will include the descriptive label:",
      "pos": [
        1667,
        1784
      ]
    }
  ],
  "content": "---\ntitle: Selecting Parts of Objects (Select-Object)\nms.custom: na\nms.reviewer: na\nms.suite: na\nms.tgt_pltfrm: na\nms.topic: article\nms.assetid: 72e64b1a-d351-4500-9da3-24d8a71d7a92\n---\n# Selecting Parts of Objects (Select-Object)\nYou can use the **Select\\-Object** cmdlet to create new, custom Windows PowerShell objects that contain properties selected from the objects you use to create them. Type the following command to create a new object that includes only the Name and FreeSpace properties of the Win32\\_LogicalDisk WMI class:\n\n```\nPS> Get-WmiObject -Class Win32_LogicalDisk | Select-Object -Property Name,FreeSpace\n\nName                                    FreeSpace\n----                                    ---------\nC:                                      50664845312\n```\n\nYou cannot see the type of data after issuing that command, but if you pipe the result to Get\\-Member after the Select\\-Object, you can tell that you have a new type of object, a PSCustomObject:\n\n```\nPS> Get-WmiObject -Class Win32_LogicalDisk | Select-Object -Property Name,FreeSpace| Get-Member\n\n   TypeName: System.Management.Automation.PSCustomObject\n\nName        MemberType   Definition\n----        ----------   ----------\nEquals      Method       System.Boolean Equals(Object obj)\nGetHashCode Method       System.Int32 GetHashCode()\nGetType     Method       System.Type GetType()\nToString    Method       System.String ToString()\nFreeSpace   NoteProperty  FreeSpace=...\nName        NoteProperty System.String Name=C:\n```\n\nSelect\\-Object has many uses. One of them is replicating data that you can then modify. We can now handle the problem we ran across in the previous section. We can update the value of FreeSpace in our newly\\-created objects and the output will include the descriptive label:\n\n```\nGet-WmiObject -Class Win32_LogicalDisk | Select-Object -Property Name,FreeSpace | ForEach-Object -Process {$_.FreeSpace = ($_.FreeSpace)/1024.0/1024.0; $_}\nName                                                                  FreeSpace\n----                                                                  ---------\nC:                                                                48317.7265625\n```\n\n"
}