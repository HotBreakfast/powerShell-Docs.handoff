{
  "nodes": [
    {
      "content": "Running DSC with user credentials",
      "pos": [
        2,
        35
      ]
    },
    {
      "content": "Applies To: Windows PowerShell 5.0",
      "pos": [
        40,
        74
      ]
    },
    {
      "content": "You can run a DSC configuration under a specified set of credentials by using the <bpt id=\"p1\">**</bpt>PsDscRunAsCredential<ept id=\"p1\">**</ept> property in the configuration.",
      "pos": [
        76,
        213
      ]
    },
    {
      "content": "By default, DSC runs",
      "pos": [
        214,
        234
      ]
    },
    {
      "content": "as the system account.",
      "pos": [
        235,
        257
      ]
    },
    {
      "content": "There are times when running as a user is necessary, such as installing MSI packages in a specific user context, setting a user's registry keys,",
      "pos": [
        258,
        402
      ]
    },
    {
      "content": "accessing a user's specific local directory, or accessing a network share.",
      "pos": [
        403,
        477
      ]
    },
    {
      "content": "Every DSC resource has a <bpt id=\"p1\">**</bpt>PsDscRunAsCredential<ept id=\"p1\">**</ept> property that can be set to any user credentials (a <bpt id=\"p2\">[</bpt>PSCredential<ept id=\"p2\">](https://msdn.microsoft.com/en-us/library/ms572524(v=VS.85).aspx)</ept> object).",
      "pos": [
        479,
        669
      ]
    },
    {
      "content": "The credential can be hard-coded as the value of the property in the configuration, or you can set the value to <bpt id=\"p1\">[</bpt>Get-Credential<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/hh849815.aspx)</ept>,",
      "pos": [
        670,
        858
      ]
    },
    {
      "content": "which will prompt the user for a credential when the configuration is compiled (for information about compiling configurations, see <bpt id=\"p1\">[</bpt>Configurations<ept id=\"p1\">](configurations.md)</ept>.",
      "pos": [
        859,
        1027
      ]
    },
    {
      "pos": [
        1030,
        1113
      ],
      "content": "<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> The <bpt id=\"p2\">**</bpt>PsDscRunAsCredential<ept id=\"p2\">**</ept> property is not available in PowerShell 4.0."
    },
    {
      "content": "In the following example, <bpt id=\"p1\">**</bpt>Get-Credential<ept id=\"p1\">**</ept> is used to prompt the user for credentials.",
      "pos": [
        1115,
        1203
      ]
    },
    {
      "content": "The <bpt id=\"p1\">[</bpt>Registry<ept id=\"p1\">](registryResource.md)</ept> resource is used to change the registry key that specifies the background color",
      "pos": [
        1204,
        1319
      ]
    },
    {
      "content": "for the Windows command prompt window.",
      "pos": [
        1320,
        1358
      ]
    },
    {
      "pos": [
        2209,
        2493
      ],
      "content": "**Note:** This example assumes that you have a valid certificate at `C:\\publicKeys\\targetNode.cer`, and that the thumbprint of that certificate is the value shown.\nFor information about encrypting credentials in DSC configuration MOF files, see [Securing the MOF file](secureMOF.md).",
      "leadings": [
        "",
        ">"
      ],
      "nodes": [
        {
          "content": "<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> This example assumes that you have a valid certificate at <ph id=\"ph1\">`C:\\publicKeys\\targetNode.cer`</ph>, and that the thumbprint of that certificate is the value shown.",
          "pos": [
            0,
            163
          ]
        },
        {
          "content": "For information about encrypting credentials in DSC configuration MOF files, see <bpt id=\"p1\">[</bpt>Securing the MOF file<ept id=\"p1\">](secureMOF.md)</ept>.",
          "pos": [
            164,
            283
          ]
        }
      ]
    }
  ],
  "content": "# Running DSC with user credentials \n\n> Applies To: Windows PowerShell 5.0\n\nYou can run a DSC configuration under a specified set of credentials by using the **PsDscRunAsCredential** property in the configuration. By default, DSC runs\nas the system account. There are times when running as a user is necessary, such as installing MSI packages in a specific user context, setting a user's registry keys,\naccessing a user's specific local directory, or accessing a network share.\n\nEvery DSC resource has a **PsDscRunAsCredential** property that can be set to any user credentials (a [PSCredential](https://msdn.microsoft.com/en-us/library/ms572524(v=VS.85).aspx) object).\nThe credential can be hard-coded as the value of the property in the configuration, or you can set the value to [Get-Credential](https://technet.microsoft.com/en-us/library/hh849815.aspx),\nwhich will prompt the user for a credential when the configuration is compiled (for information about compiling configurations, see [Configurations](configurations.md).\n\n>**Note:** The **PsDscRunAsCredential** property is not available in PowerShell 4.0.\n\nIn the following example, **Get-Credential** is used to prompt the user for credentials. The [Registry](registryResource.md) resource is used to change the registry key that specifies the background color\nfor the Windows command prompt window.\n\n```powershell\nConfiguration ChangeCmdBackGroundColor    \n\n{\n    Import-DscResource -ModuleName PSDesiredStateConfiguration\n\n    Node $AllNodes.NodeName\n\n    {\n        Registry CmdPath\n\n        {\n\n            Key = 'HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Command Processor'\n\n            ValueName = \"DefaultColor\"\n\n            ValueData = '1F'\n\n            ValueType = \"DWORD\"\n\n            Ensure = \"Present\"\n\n            Force = $true\n\n            Hex = $true\n\n            PsDscRunAsCredential = Get-Credential\n        }\n    }                   \n}\n\n$configData = @{\n\n    AllNodes = @(\n\n    @{\n\n        NodeName=\"localhost\";\n        PSDscAllowDomainUser = $true\n        CertificateFile = \"C:\\publicKeys\\targetNode.cer\"\n        Thumbprint = \"7ee7f09d-4be0-41aa-a47f-96b9e3bdec25\"\n\n    })\n\n}\n\nChangeCmdBackGroundColor -ConfigurationData $configData\n```\n>**Note:** This example assumes that you have a valid certificate at `C:\\publicKeys\\targetNode.cer`, and that the thumbprint of that certificate is the value shown.\n>For information about encrypting credentials in DSC configuration MOF files, see [Securing the MOF file](secureMOF.md). \n\n"
}