{"nodes":[{"pos":[12,39],"content":"Windows PowerShell Glossary","needQuote":true,"nodes":[{"content":"Windows PowerShell Glossary","pos":[0,27]}]},{"pos":[72,89],"content":"powershell,cmdlet","needQuote":true,"nodes":[{"content":"powershell,cmdlet","pos":[0,17]}]},{"content":"Windows PowerShell Glossary","pos":[237,264]},{"content":"Term","pos":[268,272]},{"content":"Definition","pos":[273,283]},{"content":"binary module","pos":[312,325]},{"content":"A Windows PowerShell module whose root module is a binary module file (.dll).","pos":[326,403]},{"content":"A binary module may or may not include a module manifest.","pos":[404,461]},{"content":"common parameter","pos":[464,480]},{"content":"A parameter that is added to all cmdlets and advanced functions by the Windows PowerShell engine.","pos":[481,578]},{"content":"dot source","pos":[581,591]},{"content":"In Windows PowerShell, to start a command by typing a dot and a space before the command.","pos":[592,681]},{"content":"Commands that are dot sourced run in the current scope instead of in a new scope.","pos":[682,763]},{"content":"Any variables, aliases, functions, or drives that command creates are created in the current scope and are available to users when the command is completed.","pos":[764,920]},{"content":"dynamic module","pos":[923,937]},{"content":"A module that exists only in memory.","pos":[938,974]},{"content":"The New-Module and Import-PSSession cmdlets create dynamic modules.","pos":[975,1042]},{"content":"dynamic parameter","pos":[1045,1062]},{"content":"A parameter that is added to a Windows PowerShell cmdlet, function, or script under certain conditions.","pos":[1063,1166]},{"content":"Cmdlets, functions, providers, and scripts can add dynamic parameters.","pos":[1167,1237]},{"content":"formatting file","pos":[1240,1255]},{"content":"A Windows PowerShell XML file that has the .format.ps1xml extension and that defines how Windows PowerShell displays an object based on its .NET Framework type.","pos":[1256,1416]},{"content":"global session state","pos":[1419,1439]},{"content":"The session state that contains the data that is accessible to the user of a Windows PowerShell session.","pos":[1440,1544]},{"content":"host","pos":[1547,1551]},{"content":"The interface that the Windows PowerShell engine uses to communicate with the user.","pos":[1552,1635]},{"content":"For example, the host specifies how prompts are handled between Windows PowerShell and the user.","pos":[1636,1732]},{"content":"host application","pos":[1735,1751]},{"content":"A program that loads the Windows PowerShell engine into its process and uses it to perform operations.","pos":[1752,1854]},{"content":"input processing method","pos":[1857,1880]},{"content":"A method that a cmdlet can use to process the records it receives as input.","pos":[1881,1956]},{"content":"The input processing methods include the BeginProcessing method, the ProcessRecord method, the EndProcessing method, and the StopProcessing method.","pos":[1957,2104]},{"content":"manifest module","pos":[2107,2122]},{"content":"A Windows PowerShell module that has a manifest and whose ModulesToProcess key is empty.","pos":[2123,2211]},{"content":"module manifest","pos":[2214,2229]},{"content":"A Windows PowerShell data file (.psd1) that describes the contents of a module and that controls how a module is processed.","pos":[2230,2353]},{"content":"module session state","pos":[2356,2376]},{"content":"The session state that contains the public and private data of a Windows PowerShell module.","pos":[2377,2468]},{"content":"The private data in this session state is not available to the user of a Windows PowerShell session.","pos":[2469,2569]},{"content":"non<ph id=\"ph1\">\\-</ph>terminating error","pos":[2572,2594],"source":"non\\-terminating error"},{"content":"An error that does not stop Windows PowerShell from continuing to process the command.","pos":[2595,2681]},{"content":"noun","pos":[2684,2688]},{"content":"The word that follows the hyphen in a Windows PowerShell cmdlet name.","pos":[2689,2758]},{"content":"The noun describes the resources upon which the cmdlet acts.","pos":[2759,2819]},{"content":"parameter set","pos":[2822,2835]},{"content":"A group of parameters that can be used in the same command to perform a specific action.","pos":[2836,2924]},{"content":"pipe","pos":[2927,2931]},{"content":"In Windows PowerShell, to send the results of the preceding command as input to the next command in the pipeline.","pos":[2932,3045]},{"content":"pipeline","pos":[3048,3056]},{"content":"A series of commands connected by pipeline operators (&amp;#124;) (ASCII 124).","pos":[3057,3131],"source":"A series of commands connected by pipeline operators (&#124;) (ASCII 124)."},{"content":"Each pipeline operator sends the results of the preceding command as input to the next command.","pos":[3132,3227]},{"content":"PSSession","pos":[3230,3239]},{"content":"A type of Windows PowerShell session that is created, managed, and closed by the user.","pos":[3240,3326]},{"content":"root module","pos":[3329,3340]},{"content":"The module specified in the ModuleToProcess key in a module manifest.","pos":[3341,3410]},{"content":"runspace","pos":[3413,3421]},{"content":"In Windows PowerShell, the operating environment in which each command in a pipeline is executed.","pos":[3422,3519]},{"content":"script block","pos":[3522,3534]},{"content":"In the Windows PowerShell programming language, a collection of statements or expressions that can be used as a single unit.","pos":[3535,3659]},{"content":"A script block can accept arguments and return values.","pos":[3660,3714]},{"content":"script module","pos":[3717,3730]},{"content":"A Windows PowerShell module whose root module is a script module file (.psm1).","pos":[3731,3809]},{"content":"A script module may or may not include a module manifest.","pos":[3810,3867]},{"content":"script module file","pos":[3870,3888]},{"content":"A file that contains a Windows PowerShell script.","pos":[3889,3938]},{"content":"The script defines the members that the script module exports.","pos":[3939,4001]},{"content":"Script module files have the .psm1 file name extension.","pos":[4002,4057]},{"content":"shell","pos":[4060,4065]},{"content":"The command interpreter that is used to pass commands to the operating system.","pos":[4066,4144]},{"content":"switch parameter","pos":[4147,4163]},{"content":"A parameter that does not take an argument.","pos":[4164,4207]},{"content":"terminating error","pos":[4210,4227]},{"content":"An error that stops Windows PowerShell from processing the command.","pos":[4228,4295]},{"content":"transaction","pos":[4298,4309]},{"content":"An atomic unit of work.","pos":[4310,4333]},{"content":"The work in a transaction must be completed as a whole; if any part of the transaction fails, the entire transaction fails.","pos":[4334,4457]},{"content":"types file","pos":[4460,4470]},{"content":"A Windows PowerShell XML file that has the .ps1xml extension and that extends the properties of Microsoft .NET Framework types in Windows PowerShell.","pos":[4471,4620]},{"content":"verb","pos":[4623,4627]},{"content":"The word that precedes the hyphen in a Windows PowerShell cmdlet  name.","pos":[4628,4699]},{"content":"The verb describes the action that the cmdlet performs.","pos":[4700,4755]},{"content":"Windows PowerShell","pos":[4758,4776]},{"content":"A command<ph id=\"ph1\">\\-</ph>line shell and task<ph id=\"ph2\">\\-</ph>based scripting technology that provides IT administrators comprehensive control and automation of system administration tasks.","pos":[4777,4936],"source":"A command\\-line shell and task\\-based scripting technology that provides IT administrators comprehensive control and automation of system administration tasks."},{"content":"Windows PowerShell command","pos":[4939,4965]},{"content":"The elements in a pipeline that cause an action to be carried out.","pos":[4966,5032]},{"content":"Windows PowerShell commands are either typed at the keyboard or invoked programmatically.","pos":[5033,5122]},{"content":"Windows PowerShell data file","pos":[5125,5153]},{"content":"A text file that has the .psd1 file name extension.","pos":[5154,5205]},{"content":"Windows PowerShell uses data files for various purposes such as storing module manifest data and storing translated strings for script internationalization.","pos":[5206,5362]},{"content":"Windows PowerShell drive","pos":[5365,5389]},{"content":"A virtual drive that provides direct access to a data store.","pos":[5390,5450]},{"content":"It can be defined by a Windows PowerShell provider or created at the command line.","pos":[5451,5533]},{"content":"Drives created at the command line are session<ph id=\"ph1\">\\-</ph>specific drives and are lost when the session is closed.","pos":[5534,5638],"source":" Drives created at the command line are session\\-specific drives and are lost when the session is closed."},{"content":"Windows PowerShell Integrated Scripting Environment (ISE)","pos":[5641,5698]},{"content":"A Windows PowerShell host application that enables you to run commands and to write, test, and debug scripts in a friendly, syntax<ph id=\"ph1\">\\-</ph>colored, Unicode<ph id=\"ph2\">\\-</ph>compliant environment.","pos":[5699,5871],"source":"A Windows PowerShell host application that enables you to run commands and to write, test, and debug scripts in a friendly, syntax\\-colored, Unicode\\-compliant environment."},{"content":"Windows PowerShell module","pos":[5874,5899]},{"content":"A self<ph id=\"ph1\">\\-</ph>contained reusable unit that allows you to partition, organize, and abstract your Windows PowerShell  code.","pos":[5900,6015],"source":"A self\\-contained reusable unit that allows you to partition, organize, and abstract your Windows PowerShell  code."},{"content":"A module can contain cmdlets, providers, functions, variables, and other types of resources that can be imported as a single unit.","pos":[6016,6146]},{"content":"Windows PowerShell provider","pos":[6149,6176]},{"content":"A Microsoft .NET Framework<ph id=\"ph1\">\\-</ph>based program that makes the data in a specialized data store available in Windows PowerShell so that you can view and manage it.","pos":[6177,6334],"source":"A Microsoft .NET Framework\\-based program that makes the data in a specialized data store available in Windows PowerShell so that you can view and manage it."},{"content":"Windows PowerShell script","pos":[6337,6362]},{"content":"A script that is written in the Windows PowerShell language.","pos":[6363,6423]},{"content":"Windows PowerShell script file","pos":[6426,6456]},{"content":"A file that has the .ps1 extension and that contains a script that is written in the Windows PowerShell language.","pos":[6457,6570]},{"content":"Windows PowerShell snap<ph id=\"ph1\">\\-</ph>in","pos":[6573,6600],"source":"Windows PowerShell snap\\-in"},{"content":"A resource that defines a set of cmdlets, providers, and Microsoft .NET Framework types that can be added to the Windows PowerShell environment.","pos":[6601,6745]},{"content":"Windows PowerShell Workflow","pos":[6748,6775]},{"content":"A workflow is a sequence of programmed, connected steps that perform long<ph id=\"ph1\">\\-</ph>running tasks or require the coordination of multiple steps across multiple devices or managed nodes.","pos":[6776,6952],"source":"A workflow is a sequence of programmed, connected steps that perform long\\-running tasks or require the coordination of multiple steps across multiple devices or managed nodes."},{"content":"Windows PowerShell Workflow lets IT pros and developers author sequences of multi<ph id=\"ph1\">\\-</ph>device management activities, or single tasks within a workflow, as workflows.","pos":[6953,7114],"source":" Windows PowerShell Workflow lets IT pros and developers author sequences of multi\\-device management activities, or single tasks within a workflow, as workflows."},{"content":"Windows PowerShell Workflow lets you adapt and run both Windows PowerShell scripts and XAML files as workflows.","pos":[7115,7226]}],"content":"---\ntitle:  Windows PowerShell Glossary\nms.date:  2016-05-11\nkeywords:  powershell,cmdlet\ndescription:  \nms.topic:  article\nauthor:  jpjofre\nmanager:  dongill\nms.prod:  powershell\nms.assetid:  b0f88cbe-cb83-4912-a301-184534cb35c7\n---\n\n# Windows PowerShell Glossary\n\n\n|Term|Definition|\n|--------|--------------|\n|binary module|A Windows PowerShell module whose root module is a binary module file (.dll). A binary module may or may not include a module manifest.|\n|common parameter|A parameter that is added to all cmdlets and advanced functions by the Windows PowerShell engine.|\n|dot source|In Windows PowerShell, to start a command by typing a dot and a space before the command. Commands that are dot sourced run in the current scope instead of in a new scope. Any variables, aliases, functions, or drives that command creates are created in the current scope and are available to users when the command is completed.|\n|dynamic module|A module that exists only in memory. The New-Module and Import-PSSession cmdlets create dynamic modules.|\n|dynamic parameter|A parameter that is added to a Windows PowerShell cmdlet, function, or script under certain conditions. Cmdlets, functions, providers, and scripts can add dynamic parameters.|\n|formatting file|A Windows PowerShell XML file that has the .format.ps1xml extension and that defines how Windows PowerShell displays an object based on its .NET Framework type.|\n|global session state|The session state that contains the data that is accessible to the user of a Windows PowerShell session.|\n|host|The interface that the Windows PowerShell engine uses to communicate with the user. For example, the host specifies how prompts are handled between Windows PowerShell and the user.|\n|host application|A program that loads the Windows PowerShell engine into its process and uses it to perform operations.|\n|input processing method|A method that a cmdlet can use to process the records it receives as input. The input processing methods include the BeginProcessing method, the ProcessRecord method, the EndProcessing method, and the StopProcessing method.|\n|manifest module|A Windows PowerShell module that has a manifest and whose ModulesToProcess key is empty.|\n|module manifest|A Windows PowerShell data file (.psd1) that describes the contents of a module and that controls how a module is processed.|\n|module session state|The session state that contains the public and private data of a Windows PowerShell module. The private data in this session state is not available to the user of a Windows PowerShell session.|\n|non\\-terminating error|An error that does not stop Windows PowerShell from continuing to process the command.|\n|noun|The word that follows the hyphen in a Windows PowerShell cmdlet name. The noun describes the resources upon which the cmdlet acts.|\n|parameter set|A group of parameters that can be used in the same command to perform a specific action.|\n|pipe|In Windows PowerShell, to send the results of the preceding command as input to the next command in the pipeline.|\n|pipeline|A series of commands connected by pipeline operators (&#124;) (ASCII 124). Each pipeline operator sends the results of the preceding command as input to the next command.|\n|PSSession|A type of Windows PowerShell session that is created, managed, and closed by the user.|\n|root module|The module specified in the ModuleToProcess key in a module manifest.|\n|runspace|In Windows PowerShell, the operating environment in which each command in a pipeline is executed.|\n|script block|In the Windows PowerShell programming language, a collection of statements or expressions that can be used as a single unit. A script block can accept arguments and return values.|\n|script module|A Windows PowerShell module whose root module is a script module file (.psm1). A script module may or may not include a module manifest.|\n|script module file|A file that contains a Windows PowerShell script. The script defines the members that the script module exports. Script module files have the .psm1 file name extension.|\n|shell|The command interpreter that is used to pass commands to the operating system.|\n|switch parameter|A parameter that does not take an argument.|\n|terminating error|An error that stops Windows PowerShell from processing the command.|\n|transaction|An atomic unit of work. The work in a transaction must be completed as a whole; if any part of the transaction fails, the entire transaction fails.|\n|types file|A Windows PowerShell XML file that has the .ps1xml extension and that extends the properties of Microsoft .NET Framework types in Windows PowerShell.|\n|verb|The word that precedes the hyphen in a Windows PowerShell cmdlet  name. The verb describes the action that the cmdlet performs.|\n|Windows PowerShell|A command\\-line shell and task\\-based scripting technology that provides IT administrators comprehensive control and automation of system administration tasks.|\n|Windows PowerShell command|The elements in a pipeline that cause an action to be carried out. Windows PowerShell commands are either typed at the keyboard or invoked programmatically.|\n|Windows PowerShell data file|A text file that has the .psd1 file name extension. Windows PowerShell uses data files for various purposes such as storing module manifest data and storing translated strings for script internationalization.|\n|Windows PowerShell drive|A virtual drive that provides direct access to a data store. It can be defined by a Windows PowerShell provider or created at the command line. Drives created at the command line are session\\-specific drives and are lost when the session is closed.|\n|Windows PowerShell Integrated Scripting Environment (ISE)|A Windows PowerShell host application that enables you to run commands and to write, test, and debug scripts in a friendly, syntax\\-colored, Unicode\\-compliant environment.|\n|Windows PowerShell module|A self\\-contained reusable unit that allows you to partition, organize, and abstract your Windows PowerShell  code. A module can contain cmdlets, providers, functions, variables, and other types of resources that can be imported as a single unit.|\n|Windows PowerShell provider|A Microsoft .NET Framework\\-based program that makes the data in a specialized data store available in Windows PowerShell so that you can view and manage it.|\n|Windows PowerShell script|A script that is written in the Windows PowerShell language.|\n|Windows PowerShell script file|A file that has the .ps1 extension and that contains a script that is written in the Windows PowerShell language.|\n|Windows PowerShell snap\\-in|A resource that defines a set of cmdlets, providers, and Microsoft .NET Framework types that can be added to the Windows PowerShell environment.|\n|Windows PowerShell Workflow|A workflow is a sequence of programmed, connected steps that perform long\\-running tasks or require the coordination of multiple steps across multiple devices or managed nodes. Windows PowerShell Workflow lets IT pros and developers author sequences of multi\\-device management activities, or single tasks within a workflow, as workflows. Windows PowerShell Workflow lets you adapt and run both Windows PowerShell scripts and XAML files as workflows.|\n\n"}