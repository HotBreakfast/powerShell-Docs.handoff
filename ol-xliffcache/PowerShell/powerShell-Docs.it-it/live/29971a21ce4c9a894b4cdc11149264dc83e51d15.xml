{
  "nodes": [
    {
      "content": "Get started with Desired State Configuration (DSC) for Linux",
      "pos": [
        2,
        62
      ]
    },
    {
      "content": "This topic explains how to get started using PowerShell Desired State Configuration (DSC) for Linux.",
      "pos": [
        64,
        164
      ]
    },
    {
      "content": "For general information about DSC, see <bpt id=\"p1\">[</bpt>Get Started with Windows PowerShell Desired State Configuration<ept id=\"p1\">](overview.md)</ept>.",
      "pos": [
        165,
        283
      ]
    },
    {
      "content": "Supported Linux operation system versions",
      "pos": [
        288,
        329
      ]
    },
    {
      "content": "The following Linux operating system versions are supported for DSC for Linux.",
      "pos": [
        331,
        409
      ]
    },
    {
      "content": "CentOS 5, 6, and 7 (x86/x64)",
      "pos": [
        412,
        440
      ]
    },
    {
      "content": "Debian GNU/Linux 6 and 7 (x86/x64)",
      "pos": [
        443,
        477
      ]
    },
    {
      "content": "Oracle Linux 5, 6 and 7 (x86/x64)",
      "pos": [
        480,
        513
      ]
    },
    {
      "content": "Red Hat Enterprise Linux Server 5, 6 and 7 (x86/x64)",
      "pos": [
        516,
        568
      ]
    },
    {
      "content": "SUSE Linux Enterprise Server 10, 11 and 12 (x86/x64)",
      "pos": [
        571,
        623
      ]
    },
    {
      "content": "Ubuntu Server 12.04 LTS and 14.04 LTS (x86/x64)",
      "pos": [
        626,
        673
      ]
    },
    {
      "content": "The following table describes the required package dependencies for DSC for Linux.",
      "pos": [
        675,
        757
      ]
    },
    {
      "content": "Required package",
      "pos": [
        762,
        778
      ]
    },
    {
      "content": "Description",
      "pos": [
        782,
        793
      ]
    },
    {
      "content": "Minimum version",
      "pos": [
        797,
        812
      ]
    },
    {
      "content": "glibc",
      "pos": [
        832,
        837
      ]
    },
    {
      "content": "GNU Library",
      "pos": [
        839,
        850
      ]
    },
    {
      "content": "2…4 – 31.30",
      "pos": [
        852,
        863
      ]
    },
    {
      "content": "python",
      "pos": [
        868,
        874
      ]
    },
    {
      "content": "Python",
      "pos": [
        876,
        882
      ]
    },
    {
      "content": "2.4 – 3.4",
      "pos": [
        884,
        893
      ]
    },
    {
      "content": "omiserver",
      "pos": [
        898,
        907
      ]
    },
    {
      "content": "Open Management Infrastructure",
      "pos": [
        909,
        939
      ]
    },
    {
      "content": "1.0.8.1",
      "pos": [
        941,
        948
      ]
    },
    {
      "content": "openssl",
      "pos": [
        953,
        960
      ]
    },
    {
      "content": "OpenSSL Libraries",
      "pos": [
        962,
        979
      ]
    },
    {
      "content": "0.9.8 or 1.0",
      "pos": [
        981,
        993
      ]
    },
    {
      "content": "ctypes",
      "pos": [
        998,
        1004
      ]
    },
    {
      "content": "Python CTypes library",
      "pos": [
        1006,
        1027
      ]
    },
    {
      "content": "Must match Python version",
      "pos": [
        1029,
        1054
      ]
    },
    {
      "content": "libcurl",
      "pos": [
        1059,
        1066
      ]
    },
    {
      "content": "cURL http client library",
      "pos": [
        1068,
        1092
      ]
    },
    {
      "content": "7.15.1",
      "pos": [
        1094,
        1100
      ]
    },
    {
      "content": "Installing DSC for Linux",
      "pos": [
        1107,
        1131
      ]
    },
    {
      "pos": [
        1133,
        1267
      ],
      "content": "You must install the <bpt id=\"p1\">[</bpt>Open Management Infrastructure (OMI)<ept id=\"p1\">](https://collaboration.opengroup.org/omi/)</ept> before installing DSC for Linux."
    },
    {
      "content": "Installing OMI",
      "pos": [
        1273,
        1287
      ]
    },
    {
      "content": "Desired State Configuration for Linux requires the Open Management Infrastructure (OMI) CIM server, version 1.0.8.1.",
      "pos": [
        1289,
        1405
      ]
    },
    {
      "content": "OMI can be downloaded from The Open Group: <bpt id=\"p1\">[</bpt>Open Management Infrastructure (OMI)<ept id=\"p1\">](https://collaboration.opengroup.org/omi/)</ept>.",
      "pos": [
        1406,
        1530
      ]
    },
    {
      "content": "To install OMI, install the package that is appropriate for your Linux system (.rpm or .deb) and OpenSSL version (ssl_098 or ssl_100), and architecture (x64/x86).",
      "pos": [
        1532,
        1694
      ]
    },
    {
      "content": "RPM packages are appropriate for CentOS, Red Hat Enterprise Linux, SUSE Linux Enterprise Server, and Oracle Linux.",
      "pos": [
        1695,
        1809
      ]
    },
    {
      "content": "DEB packages are appropriate for Debian GNU/Linux and Ubuntu Server.",
      "pos": [
        1810,
        1878
      ]
    },
    {
      "content": "The ssl_098 packages are appropriate for computers with OpenSSL 0.9.8 installed while the ssl_100 packages are appropriate for computers with OpenSSL 1.0 installed.",
      "pos": [
        1879,
        2043
      ]
    },
    {
      "pos": [
        2047,
        2135
      ],
      "content": "<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>: To determine the installed OpenSSL version, run the command <ph id=\"ph1\">`openssl version`</ph>."
    },
    {
      "content": "Run the following command to install OMI on a CentOS 7 x64 system.",
      "pos": [
        2137,
        2203
      ]
    },
    {
      "content": "Installing DSC",
      "pos": [
        2256,
        2270
      ]
    },
    {
      "content": "To install DSC, install the package that is appropriate for your Linux system (.rpm or .deb) and OpenSSL version (ssl_098 or ssl_100), and architecture (x64/x86).",
      "pos": [
        2272,
        2434
      ]
    },
    {
      "content": "RPM packages are appropriate for CentOS, Red Hat Enterprise Linux, SUSE Linux Enterprise Server, and Oracle Linux.",
      "pos": [
        2435,
        2549
      ]
    },
    {
      "content": "DEB packages are appropriate for Debian GNU/Linux and Ubuntu Server.",
      "pos": [
        2550,
        2618
      ]
    },
    {
      "content": "The ssl_098 packages are appropriate for computers with OpenSSL 0.9.8 installed while the ssl_100 packages are appropriate for computers with OpenSSL 1.0 installed.",
      "pos": [
        2619,
        2783
      ]
    },
    {
      "pos": [
        2787,
        2873
      ],
      "content": "<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>: To determine the installed OpenSSL version, run the command openssl version."
    },
    {
      "content": "Run the following command to install DSC on a CentOS 7 x64 system.",
      "pos": [
        2876,
        2942
      ]
    },
    {
      "content": "Using DSC for Linux",
      "pos": [
        2997,
        3016
      ]
    },
    {
      "content": "The following sections explain how to create and run DSC configurations on Linux computers.",
      "pos": [
        3018,
        3109
      ]
    },
    {
      "content": "Creating a configuration MOF document",
      "pos": [
        3115,
        3152
      ]
    },
    {
      "content": "The Windows PowerShell Configuration keyword is used to create a configuration for Linux computers, just like for Windows computers.",
      "pos": [
        3154,
        3286
      ]
    },
    {
      "content": "The following steps describe the creation of a configuration document for a Linux computer using Windows PowerShell.",
      "pos": [
        3287,
        3403
      ]
    },
    {
      "content": "Import the nx module.",
      "pos": [
        3408,
        3429
      ]
    },
    {
      "content": "The nx Windows PowerShell module contains the schema for Built-In resources for DSC for Linux, and must be installed to your local computer and imported in the configuration.",
      "pos": [
        3430,
        3604
      ]
    },
    {
      "content": "-To install the nx module, copy the nx module directory to either <ph id=\"ph1\">`%UserProfile%\\Documents\\WindowsPowerShell\\Modules\\`</ph> or <ph id=\"ph2\">`C:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules`</ph>.",
      "pos": [
        3610,
        3785
      ]
    },
    {
      "content": "The nx module is included in the DSC for Linux installation package (MSI).",
      "pos": [
        3786,
        3860
      ]
    },
    {
      "content": "To import the nx module in your configuration, use the <bpt id=\"p1\">__</bpt>Import-DSCResource<ept id=\"p1\">__</ept> command:",
      "pos": [
        3861,
        3947
      ]
    },
    {
      "content": "Define a configuration and generate the configuration document:",
      "pos": [
        4051,
        4114
      ]
    },
    {
      "content": "Push the configuration to the Linux computer",
      "pos": [
        4461,
        4505
      ]
    },
    {
      "content": "Configuration documents (MOF files) can be pushed to the Linux computer using the <bpt id=\"p1\">[</bpt>Start-DscConfiguration<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept> cmdlet.",
      "pos": [
        4507,
        4680
      ]
    },
    {
      "content": "In order to use this cmdlet, along with the <bpt id=\"p1\">[</bpt>Get-DscConfiguration<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn407379)</ept>.aspx, or <bpt id=\"p2\">[</bpt>Test-DscConfiguration<ept id=\"p2\">](https://technet.microsoft.com/en-us/library/dn407382.aspx)</ept> cmdlets, remotely to a Linux computer, you must use a CIMSession.",
      "pos": [
        4681,
        4959
      ]
    },
    {
      "content": "The <bpt id=\"p1\">[</bpt>New-CimSession<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/jj590760.aspx)</ept> cmdlet is used to create a CIMSession to the Linux computer.",
      "pos": [
        4960,
        5100
      ]
    },
    {
      "content": "The following code shows how to create a CIMSession for DSC for Linux.",
      "pos": [
        5102,
        5172
      ]
    },
    {
      "pos": [
        5660,
        5669
      ],
      "content": "<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>:"
    },
    {
      "content": "For “Push” mode, the user credential must be the root user on the Linux computer.",
      "pos": [
        5672,
        5753
      ]
    },
    {
      "content": "Only SSL/TLS connections are supported for DSC for Linux, the New-CimSession must be used with the –UseSSL parameter set to $true.",
      "pos": [
        5756,
        5886
      ]
    },
    {
      "content": "The SSL certificate used by OMI (for DSC) is specified in the file: <ph id=\"ph1\">`/opt/omi/etc/omiserver.conf`</ph> with the properties: pemfile and keyfile.",
      "pos": [
        5889,
        6028
      ]
    },
    {
      "content": "If this certificate is not trusted by the Windows computer that you are running the <bpt id=\"p1\">[</bpt>New-CimSession<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/jj590760.aspx)</ept> cmdlet on, you can choose to ignore certificate validation with the CIMSession Options: <ph id=\"ph1\">`-SkipCACheck:$true -SkipCNCheck:$true -SkipRevocationCheck:$true`</ph>",
      "pos": [
        6029,
        6343
      ]
    },
    {
      "content": "Run the following command to push the DSC configuration to the Linux node.",
      "pos": [
        6345,
        6419
      ]
    },
    {
      "content": "Distribute the configuration with a pull server",
      "pos": [
        6500,
        6547
      ]
    },
    {
      "content": "Configurations can be distributed to a Linux computer with a pull server, just like for Windows computers.",
      "pos": [
        6549,
        6655
      ]
    },
    {
      "content": "For guidance on using a pull server, see <bpt id=\"p1\">[</bpt>Windows PowerShell Desired State Configuration Pull Servers<ept id=\"p1\">](pullServer.md)</ept>.",
      "pos": [
        6656,
        6774
      ]
    },
    {
      "content": "For additional information and limitations related to using Linux computers with a pull server, see the Release Notes for Desired State Configuration for Linux.",
      "pos": [
        6775,
        6935
      ]
    },
    {
      "content": "Working with configurations locally",
      "pos": [
        6941,
        6976
      ]
    },
    {
      "content": "DSC for Linux includes scripts to work with configuration from the local Linux computer.",
      "pos": [
        6978,
        7066
      ]
    },
    {
      "content": "These scripts are locate in <ph id=\"ph1\">`/opt/microsoft/dsc/Scripts`</ph> and include the following:",
      "pos": [
        7067,
        7150
      ]
    },
    {
      "content": "GetConfiguration.py",
      "pos": [
        7153,
        7172
      ]
    },
    {
      "content": "Returns the current configuration applied to the computer.",
      "pos": [
        7175,
        7233
      ]
    },
    {
      "content": "Similar to the Windows PowerShell cmdlet Get-DscConfiguration cmdlet.",
      "pos": [
        7234,
        7303
      ]
    },
    {
      "content": "GetMetaConfiguration.py",
      "pos": [
        7339,
        7362
      ]
    },
    {
      "content": "Returns the current meta-configuration applied to the computer.",
      "pos": [
        7365,
        7428
      ]
    },
    {
      "content": "Similar to the cmdlet <bpt id=\"p1\">[</bpt>Get-DSCLocalConfigurationManager<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn407378.aspx)</ept> cmdlet.",
      "pos": [
        7429,
        7552
      ]
    },
    {
      "content": "InstallModule.py",
      "pos": [
        7592,
        7608
      ]
    },
    {
      "content": "Installs a custom DSC resource module.",
      "pos": [
        7611,
        7649
      ]
    },
    {
      "content": "Requires the path to a .zip file containing the module shared object library and schema MOF files.",
      "pos": [
        7650,
        7748
      ]
    },
    {
      "content": "RemoveModule.py",
      "pos": [
        7803,
        7818
      ]
    },
    {
      "content": "Removes a custom DSC resource module.",
      "pos": [
        7821,
        7858
      ]
    },
    {
      "content": "Requires the name of the module to remove.",
      "pos": [
        7859,
        7901
      ]
    },
    {
      "content": "SendConfigurationApply.py",
      "pos": [
        7946,
        7971
      ]
    },
    {
      "content": "Applies a configuration MOF file to the computer.",
      "pos": [
        7974,
        8023
      ]
    },
    {
      "content": "Similar to the <bpt id=\"p1\">[</bpt>Start-DscConfiguration<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept> cmdlet.",
      "pos": [
        8024,
        8130
      ]
    },
    {
      "content": "Requires the path to the configuration MOF to apply.",
      "pos": [
        8131,
        8183
      ]
    },
    {
      "content": "SendMetaConfiguration.py",
      "pos": [
        8228,
        8252
      ]
    },
    {
      "content": "Applies a Meta Configuration MOF file to the computer.",
      "pos": [
        8255,
        8309
      ]
    },
    {
      "content": "Similar to the <bpt id=\"p1\">[</bpt>Set-DSCLocalConfigurationManager<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn521621.aspx)</ept> cmdlet.",
      "pos": [
        8310,
        8426
      ]
    },
    {
      "content": "Requires the path to the Meta Configuration MOF to apply.",
      "pos": [
        8427,
        8484
      ]
    },
    {
      "content": "PowerShell Desired State Configuration for Linux Log Files",
      "pos": [
        8568,
        8626
      ]
    },
    {
      "content": "The following log files are generated for DSC for Linux messages.",
      "pos": [
        8628,
        8693
      ]
    },
    {
      "content": "Log file",
      "pos": [
        8696,
        8704
      ]
    },
    {
      "content": "Directory",
      "pos": [
        8705,
        8714
      ]
    },
    {
      "content": "Description",
      "pos": [
        8715,
        8726
      ]
    },
    {
      "content": "omiserver.log",
      "pos": [
        8743,
        8756
      ]
    },
    {
      "content": "/opt/omi/var/log/",
      "pos": [
        8757,
        8774
      ]
    },
    {
      "content": "Messages relating to the operation of the OMI CIM server.",
      "pos": [
        8775,
        8832
      ]
    },
    {
      "content": "dsc.log",
      "pos": [
        8835,
        8842
      ]
    },
    {
      "content": "/opt/omi/var/log/",
      "pos": [
        8843,
        8860
      ]
    },
    {
      "content": "Messages relating to the operation of the Local Configuration Manager (LCM) and DSC resource operations.",
      "pos": [
        8861,
        8965
      ]
    }
  ],
  "content": "# Get started with Desired State Configuration (DSC) for Linux\n\nThis topic explains how to get started using PowerShell Desired State Configuration (DSC) for Linux. For general information about DSC, see [Get Started with Windows PowerShell Desired State Configuration](overview.md).\n\n## Supported Linux operation system versions\n\nThe following Linux operating system versions are supported for DSC for Linux.\n- CentOS 5, 6, and 7 (x86/x64)\n- Debian GNU/Linux 6 and 7 (x86/x64)\n- Oracle Linux 5, 6 and 7 (x86/x64)\n- Red Hat Enterprise Linux Server 5, 6 and 7 (x86/x64)\n- SUSE Linux Enterprise Server 10, 11 and 12 (x86/x64)\n- Ubuntu Server 12.04 LTS and 14.04 LTS (x86/x64)\n\nThe following table describes the required package dependencies for DSC for Linux.\n\n|  Required package |  Description |  Minimum version | \n|---|---|---|\n| glibc| GNU Library| 2…4 – 31.30| \n| python| Python| 2.4 – 3.4| \n| omiserver| Open Management Infrastructure| 1.0.8.1| \n| openssl| OpenSSL Libraries| 0.9.8 or 1.0| \n| ctypes| Python CTypes library| Must match Python version| \n| libcurl| cURL http client library| 7.15.1| \n\n## Installing DSC for Linux\n\nYou must install the [Open Management Infrastructure (OMI)](https://collaboration.opengroup.org/omi/) before installing DSC for Linux.\n\n### Installing OMI\n\nDesired State Configuration for Linux requires the Open Management Infrastructure (OMI) CIM server, version 1.0.8.1. OMI can be downloaded from The Open Group: [Open Management Infrastructure (OMI)](https://collaboration.opengroup.org/omi/).\n\nTo install OMI, install the package that is appropriate for your Linux system (.rpm or .deb) and OpenSSL version (ssl_098 or ssl_100), and architecture (x64/x86). RPM packages are appropriate for CentOS, Red Hat Enterprise Linux, SUSE Linux Enterprise Server, and Oracle Linux. DEB packages are appropriate for Debian GNU/Linux and Ubuntu Server. The ssl_098 packages are appropriate for computers with OpenSSL 0.9.8 installed while the ssl_100 packages are appropriate for computers with OpenSSL 1.0 installed.\n\n> **Note**: To determine the installed OpenSSL version, run the command `openssl version`.\n\nRun the following command to install OMI on a CentOS 7 x64 system.\n\n`# sudo rpm -Uvh omiserver-1.0.8.ssl_100.rpm`\n\n### Installing DSC\n\nTo install DSC, install the package that is appropriate for your Linux system (.rpm or .deb) and OpenSSL version (ssl_098 or ssl_100), and architecture (x64/x86). RPM packages are appropriate for CentOS, Red Hat Enterprise Linux, SUSE Linux Enterprise Server, and Oracle Linux. DEB packages are appropriate for Debian GNU/Linux and Ubuntu Server. The ssl_098 packages are appropriate for computers with OpenSSL 0.9.8 installed while the ssl_100 packages are appropriate for computers with OpenSSL 1.0 installed.\n\n> **Note**: To determine the installed OpenSSL version, run the command openssl version.\n \nRun the following command to install DSC on a CentOS 7 x64 system.\n\n`# sudo rpm -Uvh dsc-1.0.0-254.ssl_100.x64.rpm`\n\n\n## Using DSC for Linux\n\nThe following sections explain how to create and run DSC configurations on Linux computers.\n\n### Creating a configuration MOF document\n\nThe Windows PowerShell Configuration keyword is used to create a configuration for Linux computers, just like for Windows computers. The following steps describe the creation of a configuration document for a Linux computer using Windows PowerShell.\n\n1. Import the nx module. The nx Windows PowerShell module contains the schema for Built-In resources for DSC for Linux, and must be installed to your local computer and imported in the configuration.\n\n    -To install the nx module, copy the nx module directory to either `%UserProfile%\\Documents\\WindowsPowerShell\\Modules\\` or `C:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules`. The nx module is included in the DSC for Linux installation package (MSI). To import the nx module in your configuration, use the __Import-DSCResource__ command:\n    \n```powershell\nConfiguration ExampleConfiguration{\n   \n    Import-DSCResource -Module nx\n\n}\n```\n2. Define a configuration and generate the configuration document:\n\n```powershell\nConfiguration ExampleConfiguration{\n   \n    Import-DSCResource -Module nx\n \n    Node  \"linuxhost.contoso.com\"{\n    nxFile ExampleFile {\n\n        DestinationPath = \"/tmp/example\"\n        Contents = \"hello world `n\"\n        Ensure = \"Present\"\n        Type = \"File\"\n    }\n\n    }\n}\nExampleConfiguration -OutputPath:\"C:\\temp\" \n```\n\n### Push the configuration to the Linux computer\n\nConfiguration documents (MOF files) can be pushed to the Linux computer using the [Start-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521623.aspx) cmdlet. In order to use this cmdlet, along with the [Get-DscConfiguration](https://technet.microsoft.com/en-us/library/dn407379).aspx, or [Test-DscConfiguration](https://technet.microsoft.com/en-us/library/dn407382.aspx) cmdlets, remotely to a Linux computer, you must use a CIMSession. The [New-CimSession](https://technet.microsoft.com/en-us/library/jj590760.aspx) cmdlet is used to create a CIMSession to the Linux computer.\n\nThe following code shows how to create a CIMSession for DSC for Linux.\n\n```powershell\n$Node = \"ostc-dsc-01\"\n$Credential = Get-Credential -UserName:\"root\" -Message:\"Enter Password:\"\n\n#Ignore SSL certificate validation\n#$opt = New-CimSessionOption -UseSsl:$true -SkipCACheck:$true -SkipCNCheck:$true -SkipRevocationCheck:$true\n\n#Options for a trusted SSL certificate\n$opt = New-CimSessionOption -UseSsl:$true \n$Sess=New-CimSession -Credential:$credential -ComputerName:$Node -Port:5986 -Authentication:basic -SessionOption:$opt -OperationTimeoutSec:90 \n```\n\n> **Note**:\n* For “Push” mode, the user credential must be the root user on the Linux computer.\n* Only SSL/TLS connections are supported for DSC for Linux, the New-CimSession must be used with the –UseSSL parameter set to $true.\n* The SSL certificate used by OMI (for DSC) is specified in the file: `/opt/omi/etc/omiserver.conf` with the properties: pemfile and keyfile.\nIf this certificate is not trusted by the Windows computer that you are running the [New-CimSession](https://technet.microsoft.com/en-us/library/jj590760.aspx) cmdlet on, you can choose to ignore certificate validation with the CIMSession Options: `-SkipCACheck:$true -SkipCNCheck:$true -SkipRevocationCheck:$true`\n\nRun the following command to push the DSC configuration to the Linux node.\n\n`Start-DSCConfiguration -Path:\"C:\\temp\" -cimsession:$sess -wait -verbose`\n\n### Distribute the configuration with a pull server\n\nConfigurations can be distributed to a Linux computer with a pull server, just like for Windows computers. For guidance on using a pull server, see [Windows PowerShell Desired State Configuration Pull Servers](pullServer.md). For additional information and limitations related to using Linux computers with a pull server, see the Release Notes for Desired State Configuration for Linux.\n\n### Working with configurations locally\n\nDSC for Linux includes scripts to work with configuration from the local Linux computer. These scripts are locate in `/opt/microsoft/dsc/Scripts` and include the following:\n* GetConfiguration.py\n\n Returns the current configuration applied to the computer. Similar to the Windows PowerShell cmdlet Get-DscConfiguration cmdlet.\n\n`# sudo ./GetConfiguration.py`\n\n* GetMetaConfiguration.py\n\n Returns the current meta-configuration applied to the computer. Similar to the cmdlet [Get-DSCLocalConfigurationManager](https://technet.microsoft.com/en-us/library/dn407378.aspx) cmdlet.\n\n`# sudo ./GetMetaConfiguration.py`\n\n* InstallModule.py\n\n Installs a custom DSC resource module. Requires the path to a .zip file containing the module shared object library and schema MOF files.\n\n`# sudo ./InstallModule.py /tmp/cnx_Resource.zip`\n\n* RemoveModule.py\n\n Removes a custom DSC resource module. Requires the name of the module to remove.\n\n`# sudo ./RemoveModule.py cnx_Resource`\n\n* SendConfigurationApply.py\n\n Applies a configuration MOF file to the computer. Similar to the [Start-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521623.aspx) cmdlet. Requires the path to the configuration MOF to apply.\n\n`# sudo ./RemoveModule.py cnx_Resource`\n\n* SendMetaConfiguration.py\n\n Applies a Meta Configuration MOF file to the computer. Similar to the [Set-DSCLocalConfigurationManager](https://technet.microsoft.com/en-us/library/dn521621.aspx) cmdlet. Requires the path to the Meta Configuration MOF to apply.\n\n`# sudo ./SendMetaConfiguration.py –configurationmof /tmp/localhost.meta.mof`\n\n## PowerShell Desired State Configuration for Linux Log Files\n\nThe following log files are generated for DSC for Linux messages.\n\n|Log file|Directory|Description|\n|---|---|---|\n|omiserver.log|/opt/omi/var/log/|Messages relating to the operation of the OMI CIM server.|\n|dsc.log|/opt/omi/var/log/|Messages relating to the operation of the Local Configuration Manager (LCM) and DSC resource operations.|\n"
}