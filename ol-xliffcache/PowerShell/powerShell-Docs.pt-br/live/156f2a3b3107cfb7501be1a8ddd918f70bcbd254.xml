{
  "nodes": [
    {
      "content": "Calling DSC resource methods directly",
      "pos": [
        2,
        39
      ]
    },
    {
      "content": "Applies To: Windows PowerShell 5.0",
      "pos": [
        42,
        76
      ]
    },
    {
      "content": "You can use the <bpt id=\"p1\">[</bpt>Invoke-DscResource<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/mt517869.aspx)</ept> cmdlet to directly call the functions or methods of a DSC resource (The <bpt id=\"p2\">**</bpt>Get-TargetResource<ept id=\"p2\">**</ept>,",
      "pos": [
        78,
        269
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Set-TargetResource<ept id=\"p1\">**</ept>, and <bpt id=\"p2\">**</bpt>Test-TargetResource<ept id=\"p2\">**</ept> functions of a MOF-based resource, or the <bpt id=\"p3\">**</bpt>Get<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>Set<ept id=\"p4\">**</ept>, and <bpt id=\"p5\">**</bpt>Test<ept id=\"p5\">**</ept> methods of a class-based resource).",
      "pos": [
        270,
        430
      ]
    },
    {
      "content": "This can be used by third-parties that want to use DSC resources, or as a helpful tool while developing resources.",
      "pos": [
        432,
        546
      ]
    },
    {
      "pos": [
        549,
        716
      ],
      "content": "This cmdlet is typically used in combination with a metaconfiguration property <ph id=\"ph1\">`refreshMode = 'Disabled'`</ph>, but it can be used no matter what <bpt id=\"p1\">**</bpt>refreshMode<ept id=\"p1\">**</ept> is set to."
    },
    {
      "content": "When calling the <bpt id=\"p1\">**</bpt>Invoke-DscResource<ept id=\"p1\">**</ept> cmdlet, you specify which method or function to call by using the <bpt id=\"p2\">**</bpt>Method<ept id=\"p2\">**</ept> parameter.",
      "pos": [
        718,
        845
      ]
    },
    {
      "content": "You specify the properties of the resource by passing a",
      "pos": [
        846,
        901
      ]
    },
    {
      "content": "hashtable as the value of the <bpt id=\"p1\">**</bpt>Property<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        903,
        956
      ]
    },
    {
      "content": "The following are examples of directly calling resource methods:",
      "pos": [
        958,
        1022
      ]
    },
    {
      "content": "Ensure a file is present",
      "pos": [
        1027,
        1051
      ]
    },
    {
      "content": "Test that a file is present",
      "pos": [
        1330,
        1357
      ]
    },
    {
      "content": "Get the contents of file",
      "pos": [
        1633,
        1657
      ]
    },
    {
      "content": "See Also",
      "pos": [
        1942,
        1950
      ]
    },
    {
      "content": "Writing a custom DSC resource with MOF",
      "pos": [
        1954,
        1992
      ]
    },
    {
      "content": "Writing a custom DSC resource with PowerShell classes",
      "pos": [
        2023,
        2076
      ]
    },
    {
      "content": "Debugging DSC resources",
      "pos": [
        2108,
        2131
      ]
    }
  ],
  "content": "# Calling DSC resource methods directly\n\n>Applies To: Windows PowerShell 5.0\n\nYou can use the [Invoke-DscResource](https://technet.microsoft.com/en-us/library/mt517869.aspx) cmdlet to directly call the functions or methods of a DSC resource (The **Get-TargetResource**,\n**Set-TargetResource**, and **Test-TargetResource** functions of a MOF-based resource, or the **Get**, **Set**, and **Test** methods of a class-based resource). \nThis can be used by third-parties that want to use DSC resources, or as a helpful tool while developing resources. \n\nThis cmdlet is typically used in combination with a metaconfiguration property `refreshMode = 'Disabled'`, but it can be used no matter what **refreshMode** is set to.\n\nWhen calling the **Invoke-DscResource** cmdlet, you specify which method or function to call by using the **Method** parameter. You specify the properties of the resource by passing a \nhashtable as the value of the **Property** parameter.\n\nThe following are examples of directly calling resource methods:\n\n## Ensure a file is present\n\n```powershell\n$result = Invoke-DscResource -Name File -Method Set -Property @{\n                            DestinationPath = \"$env:SystemDrive\\\\DirectAccess.txt\";\n                            Contents = 'This file is create by Invoke-DscResource'} -Verbose\n$result | fl\n```\n\n## Test that a file is present\n\n```powershell\n$result = Invoke-DscResource -Name File -Method Test -Property @{\n                            DestinationPath=\"$env:SystemDrive\\\\DirectAccess.txt\";\n                            Contents='This file is create by Invoke-DscResource'} -Verbose\n$result | fl\n```\n\n## Get the contents of file\n\n```powershell\n$result = Invoke-DscResource -Name File -Method Get -Property @{\n                            DestinationPath=\"$env:SystemDrive\\\\DirectAccess.txt\";\n                            Contents='This file is create by Invoke-DscResource'} -Verbose\n$result.ItemValue | fl\n```\n\n## See Also\n- [Writing a custom DSC resource with MOF](authoringResourceMOF.md) \n- [Writing a custom DSC resource with PowerShell classes](authoringResourceClass.md)\n- [Debugging DSC resources](debugResource.md)"
}